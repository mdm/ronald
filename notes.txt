CRTC
----

* where is the character rom located? inside the gate array? - no character rom just raw pixels
* are there 18 or 19 registers? 18 - the extra one is the pointer to the selected register
* skip interlace modes for first implementation
* Whenever the microprocessor writes to R12 and R13, the Linear Address Generator is updated at the start of the next vertical frame.
* Which refresh addresses provided during hsync? see datasheet ("during")
* HSYNC is not defined until R2 is programmed


Debugger
--------

* Break on bus communication


Architecture
------------

* Use Rc<RefCell>s and interior mutability


TODO
----

* Return Self in constructors where possible
* Check flag affection
* Add timing for instructions targeting IXH, IXL, IYH, and IYL
* Implement missing instructions in CPU
* Implement HALT (re-executed until next interrupt)
* Update I and R registers as necessary

Next Steps
----------

* Allow instruction tracing / logging
* Check number of interrupts per frame (why 5 instead of 6?)
* Implement debugger
  * State inspection commands
* Run emulation in separate thread to allow double buffering for screen
* Allow converting between tokenized BASIC and ASCII


Bisection feature
-----------------

* Debugger command "bisect start" remembers instruction count and takes a snapshot of the system
* Debugger command "bisect end" remembers instruction count and starts the bisection process
  * Restart system using snapshot
  * Set bisection checkpoint to ("start count" + "end count") / 2
  * Run until instruction count reaches checkpoint
  * Ask if critical section is before, after or at checkpoint
  * Adjust "start count" or "end count" accordingly
  * Repeat unless stopped
